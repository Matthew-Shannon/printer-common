[gcode_macro SET_FILAMENT_SENSOR_OFF]
gcode: #SET_FILAMENT_SENSOR SENSOR=e0_sensor ENABLE=0

[gcode_macro SET_FILAMENT_SENSOR_ON]
gcode: #SET_FILAMENT_SENSOR SENSOR=e0_sensor ENABLE=0 #1

#----------------------------------------------------------------------------------------------------------------------------
# Filament
#----------------------------------------------------------------------------------------------------------------------------

[gcode_macro M600]
description: Filament change
gcode: 
    PAUSE

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR_OFF

# [gcode_macro T0]
# gcode:
#     # do nothing

#--------------------------------------------------------------------------------------------------------------------
# moonraker -> klipper https://moonraker.readthedocs.io/en/latest/configuration/#spoolman
[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#--------------------------------------------------------------------------------------------------------------------
# fluidd -> klipper https://docs.fluidd.xyz/features/spoolman#table-of-contents
[delayed_gcode RESTORE_SELECTED_SPOOLS]
initial_duration: 0.1
gcode:
  {% set svv = printer.save_variables.variables %}
  {% for object in printer %}
    {% if object.startswith('gcode_macro ') and printer[object].spool_id is defined %}
      {% set macro = object.replace('gcode_macro ', '') %}
      {% set var = (macro + '__SPOOL_ID')|lower %}
      {% if svv[var] is defined %}
        SET_GCODE_VARIABLE MACRO={macro} VARIABLE=spool_id VALUE={svv[var]}
        RESPOND MSG="Setting spool_id to {svv[var]}"
      {% endif %}
    {% endif %}
  {% endfor %}
#--------------------------------------------------------------------------------------------------------------------
# spool2klipper https://github.com/bofh69/spool2klipper
[gcode_macro _SPOOLMAN_SET_FIELD_filament_id]
description: Store loaded filaments ID
gcode:
  {% if params.VALUE %}
    {% set id = params.VALUE|int %}
    SAVE_VARIABLE VARIABLE=active_filament_id VALUE={id}
    RESPOND MSG="Setting active_filament_id to {id}"
  {% else %}
    {action_respond_info("Parameter 'VALUE' is required")}
  {% endif %}

[gcode_macro _SPOOLMAN_CLEAR_FIELDS]
description: Removes spool info
gcode:
    SAVE_VARIABLE VARIABLE=active_filament_id VALUE=None
    RESPOND MSG="Clearing active_filament_id"

[gcode_macro _SPOOLMAN_DONE]
description: The data was transferred
gcode:
    RESPOND TYPE=command MSG="CHANGE FILAMENT"
#--------------------------------------------------------------------------------------------------------------------
# spoolman2slicer
[gcode_macro SET_ACTIVE_FILAMENT]
description: Set loaded filaments Spoolman ID
gcode:
    {action_respond_info("SET_ACTIVE_FILAMENT called")}
    {% if params.ID %}
        {% set id = params.ID|int %}
        SAVE_VARIABLE VARIABLE=active_filament_id VALUE={id}
    {% else %}
        {action_respond_info("Parameter 'ID' is required")}
    {% endif %}

[gcode_macro ASSERT_ACTIVE_FILAMENT]
description: PAUSE print if wrong filaments Spoolman ID != ID
gcode:
    {action_respond_info("ASSERT_ACTIVE_FILAMENT called")}
    {% if params.ID %}
        {% set id = params.ID|int %}
        {% set current_id = printer.save_variables.variables["active_filament"]|int %}
        {% if id != current_id %}
            M600
        {% endif %}
    {% else %}
        {action_respond_info("Parameter 'ID' is required")}
    {% endif %}
